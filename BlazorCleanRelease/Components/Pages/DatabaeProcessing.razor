@page "/processing"

@using Oracle.ManagedDataAccess.Client;

<PageTitle>Выполнение процесса</PageTitle>
<h2>Состояние выполнения</h2>
<br />
<div>@message</div>

@code {

    public class Settings
    {
        public string User { get; set; } = "SYSDBA";
        public string Password { get; set; } = "masterkey";
        public string DataSource { get; set; } = "192.168.2.125/sprutora";
        public string Scheme { get; set; } = "test";
    }
    private Settings settings = new Settings();


    private string message = "Поехали!!!\n";

    protected override async Task OnInitializedAsync()
    {
        await Task.Delay(1000);
        PasteComment("тут комментарий");


    }

    public void PasteComment(string comment)
    {
        string conStringDBA = $"User Id={settings.User};Password={settings.Password};Data Source={settings.DataSource};";

        try
        {
            using (OracleConnection connection = new OracleConnection(conStringDBA))
            {
                connection.Open();
                int key = GetNextKey(connection) - 3; //текущий последний ключ
                Console.WriteLine("key is " + key);
                message += key;
                message += "\n";
                message += "comment";
                using (OracleTransaction transaction = connection.BeginTransaction())
                {
                    byte[] commentBytes = System.Text.Encoding.UTF8.GetBytes("wwwwwwwwwwww");
                    InsertIntoCommentTable(connection, transaction, key, commentBytes);
                    Console.WriteLine("insert to SPR_SP_COMMENT_TABLE: " + key + " successfully");
                    transaction.Commit();
                }
                connection.Close();
                Console.WriteLine("Connection to Oracle closed.");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }

    private int GetNextKey(OracleConnection connection)
    {
        using (OracleCommand command = connection.CreateCommand())
        {
            command.CommandText = $"SELECT S_INCKEY FROM {settings.Scheme}.SPR_SPEECH_TABLE WHERE S_INCKEY=(SELECT max(S_INCKEY) FROM {settings.Scheme}.SPR_SPEECH_TABLE)";
            var result = command.ExecuteScalar();
            return result != DBNull.Value ? Convert.ToInt32(result) + 1 : 1;
        }
    }

    private void InsertIntoCommentTable(OracleConnection connection, OracleTransaction transaction, int key, byte[] comment)
    {
        Console.WriteLine(comment);
        /*updateCommand.CommandText = $"SELECT S_INCKEY FROM {settings.Scheme}.SPR_SPEECH_TABLE WHERE S_INCKEY=(SELECT max(S_INCKEY) FROM {settings.Scheme}.SPR_SPEECH_TABLE)";
                comment = comment.Concat(updateCommand.ExecuteScalar() as byte[]).ToArray();*/
        // Проверяем, существует ли уже запись с таким же S_INCKEY
        if (IsKeyExists(connection, transaction, key))
        {
            Console.WriteLine($"Запись с S_INCKEY={key} уже существует.");
            using (OracleCommand updateCommand = connection.CreateCommand())
            {


                updateCommand.CommandText = $"SELECT S_COMMENT FROM TEST.SPR_SP_COMMENT_TABLE WHERE S_INCKEY=6";
                var str = updateCommand.ExecuteScalar();

                Console.WriteLine("/////////////");

                Console.WriteLine(str.ToString());

                updateCommand.Transaction = transaction;
                updateCommand.CommandText = $"UPDATE {settings.Scheme}.SPR_SP_COMMENT_TABLE " +
                                $"SET S_COMMENT = :S_COMMENT WHERE S_INCKEY = :S_INCKEY";

                // Привязываем параметр S_INCKEY
                updateCommand.Parameters.Add(":S_INCKEY", OracleDbType.Int32).Value = key;

                // Привязываем BLOB-данные
                OracleParameter commentParam = updateCommand.Parameters.Add(":S_COMMENT", OracleDbType.Blob);
                commentParam.Value = str;
                
                updateCommand.ExecuteNonQuery();
            }
        }
        else
        {
            // Вставка новой записи
            using (OracleCommand insertCommand = connection.CreateCommand())
            {
                insertCommand.Transaction = transaction;
                insertCommand.CommandText = $"INSERT INTO {settings.Scheme}.SPR_SP_COMMENT_TABLE (S_INCKEY, S_COMMENT) " +
                                "VALUES (:S_INCKEY, :S_COMMENT)";
                insertCommand.Parameters.Add(":S_INCKEY", OracleDbType.Int32).Value = key;

                // Привязываем BLOB-данные
                OracleParameter commentParam = insertCommand.Parameters.Add(":S_COMMENT", OracleDbType.Blob);
                commentParam.Value = comment; // Убедитесь, что comment - это массив байтов

                insertCommand.ExecuteNonQuery();
            }
        }
    }

    private bool IsKeyExists(OracleConnection connection, OracleTransaction transaction, int key)
    {
        using (OracleCommand selectCommand = connection.CreateCommand())
        {
            selectCommand.Transaction = transaction;
            selectCommand.CommandText = $"SELECT COUNT(*) FROM {settings.Scheme}.SPR_SP_COMMENT_TABLE WHERE S_INCKEY = :S_INCKEY";
            selectCommand.Parameters.Add(":S_INCKEY", OracleDbType.Int32).Value = key;

            int count = Convert.ToInt32(selectCommand.ExecuteScalar());
            return count > 0;
        }
    }
}
